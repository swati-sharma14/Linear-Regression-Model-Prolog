# -*- coding: utf-8 -*-
"""Q-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qMocX2pht40ZrBrqJRWaNi9F0aSbwr-g
"""

#importing the required libraries
import numpy as nm  
import matplotlib.pyplot as mtp  
import pandas as pd   
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

#uploading the files
from google.colab import files
files.upload()

info= pd.read_csv("Q2_insurance_dataset.csv")
info

#expressing string values of some columns in terms of 0 and 1
info["sex"]=info["sex"].replace("female",1)
info["sex"]=info["sex"].replace("male",0)
info["smoker"]=info["smoker"].replace("no",1)
info["smoker"]=info["smoker"].replace("yes",0)
info["region"]=info["region"].replace("northeast",1)
info["region"]=info["region"].replace("southeast",2)
info["region"]=info["region"].replace("northwest",3)
info["region"]=info["region"].replace("southwest",4)

#true output as expected
trueoutput=info["charges"]

giveninputs=info.drop(['charges'], axis=1)
input_train, input_test, output_train, output_test = train_test_split(giveninputs, trueoutput, test_size=0.20, random_state=42)

ourmodel= LinearRegression()

ourmodel.fit(input_train , output_train)

predicted = ourmodel.predict(input_test)
predicted

#calculating the root mean squared error
rmse= mean_squared_error(output_test, predicted)
accuracy = ourmodel.score(input_test, output_test)
print("root means square error: ", rmse)
print("Accuracy:",accuracy*100)

#plotting th graph of expected output vs predicted output
mtp.scatter(output_test,predicted)
mtp.plot([0,50000],[0,50000], color='red')
mtp.xlabel("True Output")
mtp.ylabel("Predicted Output")
mtp.show()
